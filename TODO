confirm ARP packets' frames leave with a CRC

implement nag()'s IPv6 support
implement get_ipv6()

accept multiple devices
	add LINKTYPE_LINUX_SLL support
	requires nag() support for non-ethernet frames?
	use multiple instances instead?

accept multiple subnets (at least IPv4 and IPv6 simultaneously)
	see IDEAS
	use multiple instances instead?

add long options

find a place for macs.csv

daemonize

packaging

CLAR_COUNT.SH:

	make sure log() doesn't lose data


IDEAS:

output
	raw list available on the machine as a file
		include IPs to allow resumption?
		switch to a domain socket?
			requires either socat or "clarissa state"
				socat's not guaranteed to be available
					clarissa is
						por que no los dos?
			since the default storage is in /tmp, it shouldn't be kept
		separate program translates list and makes available on LAN?
			clar_count.sh makes translation available on the machine
			output to mqtt?
				can't be integrated because of topic?
				separate script or just crontab oneliner with mosquitto_pub
					does run clar_count.sh twice...

in the absence of (a) given subnet(s), use host struct's IP(s)'s subnet?
	would prefer not to send ARP/NDP to non-subnet IPs
		ARP packets don't pass the router (it responds for its MAC)
			NDP?
			still an issue if clarissa runs on a router

preload
	if output is persistent and includes the IP address, load
	else scan the subnet?

add exponential delay to timeout per node
	reduce nagging on less frequent devices
		longer dropout time

multithreading to increase capacity?

only accept stored capture input via stdin?
	free up -f or use it for output file setting
